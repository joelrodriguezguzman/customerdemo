name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: List directory contents
      run: ls -al .

    - name: Set TF_LOG to DEBUG
      run: echo "TF_LOG=DEBUG" >> $GITHUB_ENV

    - name: Configure AWS Credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID is set"
        echo "AWS_SECRET_ACCESS_KEY is set"

    - name: Terraform Init VPC
      run: terraform init -reconfigure -backend-config="path=terraform-vpc.tfstate"
      working-directory: .

    - name: Terraform Plan VPC
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform plan -var "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -out vpc-plan.tfplan
      working-directory: .

    - name: Terraform Apply VPC
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve vpc-plan.tfplan
      working-directory: .

    - name: Terraform Init EKS Cluster
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init -reconfigure -backend-config="path=terraform-vpc.tfstate"
      working-directory: .

    - name: Terraform Plan EKS Cluster
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform plan -var "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -out eks-cluster-plan.tfplan
      working-directory: .

    - name: Terraform Apply EKS Cluster
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve eks-cluster-plan.tfplan
      working-directory: .

    - name: Generate Kubeconfig
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      id: kubeconfig
      run: |
        aws eks update-kubeconfig --region us-east-1 --name customerdemo
        cat ~/.kube/config

    - name: Terraform Init EKS Node Group
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform init -reconfigure -backend-config="path=terraform-eks-node-group.tfstate"
      working-directory: .

    - name: Terraform Plan EKS Node Group
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform plan -var "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -out eks-node-group-plan.tfplan
      working-directory: .

    - name: Terraform Apply EKS Node Group
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: terraform apply -auto-approve eks-node-group-plan.tfplan
      working-directory: .

    - name: Create Namespace
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f terraform-eks/namespace.yaml
      

    - name: Deploy Kubernetes Resources
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: kubectl apply -f terraform-eks/deployment.yaml
      
